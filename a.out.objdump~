
a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000004003b8 <_init>:
  4003b8:	48 83 ec 08          	sub    $0x8,%rsp
  4003bc:	e8 6b 00 00 00       	callq  40042c <call_gmon_start>
  4003c1:	e8 fa 00 00 00       	callq  4004c0 <frame_dummy>
  4003c6:	e8 85 02 00 00       	callq  400650 <__do_global_ctors_aux>
  4003cb:	48 83 c4 08          	add    $0x8,%rsp
  4003cf:	c3                   	retq   

Disassembly of section .plt:

00000000004003d0 <printf@plt-0x10>:
  4003d0:	ff 35 b2 05 20 00    	pushq  0x2005b2(%rip)        # 600988 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003d6:	ff 25 b4 05 20 00    	jmpq   *0x2005b4(%rip)        # 600990 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003e0 <printf@plt>:
  4003e0:	ff 25 b2 05 20 00    	jmpq   *0x2005b2(%rip)        # 600998 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003e6:	68 00 00 00 00       	pushq  $0x0
  4003eb:	e9 e0 ff ff ff       	jmpq   4003d0 <_init+0x18>

00000000004003f0 <__libc_start_main@plt>:
  4003f0:	ff 25 aa 05 20 00    	jmpq   *0x2005aa(%rip)        # 6009a0 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003f6:	68 01 00 00 00       	pushq  $0x1
  4003fb:	e9 d0 ff ff ff       	jmpq   4003d0 <_init+0x18>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 b0 05 40 00 	mov    $0x4005b0,%r8
  400416:	48 c7 c1 c0 05 40 00 	mov    $0x4005c0,%rcx
  40041d:	48 c7 c7 e4 04 40 00 	mov    $0x4004e4,%rdi
  400424:	e8 c7 ff ff ff       	callq  4003f0 <__libc_start_main@plt>
  400429:	f4                   	hlt    
  40042a:	90                   	nop
  40042b:	90                   	nop

000000000040042c <call_gmon_start>:
  40042c:	48 83 ec 08          	sub    $0x8,%rsp
  400430:	48 8b 05 41 05 20 00 	mov    0x200541(%rip),%rax        # 600978 <_DYNAMIC+0x1a0>
  400437:	48 85 c0             	test   %rax,%rax
  40043a:	74 02                	je     40043e <call_gmon_start+0x12>
  40043c:	ff d0                	callq  *%rax
  40043e:	48 83 c4 08          	add    $0x8,%rsp
  400442:	c3                   	retq   
  400443:	90                   	nop
  400444:	90                   	nop
  400445:	90                   	nop
  400446:	90                   	nop
  400447:	90                   	nop
  400448:	90                   	nop
  400449:	90                   	nop
  40044a:	90                   	nop
  40044b:	90                   	nop
  40044c:	90                   	nop
  40044d:	90                   	nop
  40044e:	90                   	nop
  40044f:	90                   	nop

0000000000400450 <__do_global_dtors_aux>:
  400450:	55                   	push   %rbp
  400451:	48 89 e5             	mov    %rsp,%rbp
  400454:	53                   	push   %rbx
  400455:	48 83 ec 08          	sub    $0x8,%rsp
  400459:	80 3d 58 05 20 00 00 	cmpb   $0x0,0x200558(%rip)        # 6009b8 <__bss_start>
  400460:	75 4b                	jne    4004ad <__do_global_dtors_aux+0x5d>
  400462:	bb c8 07 60 00       	mov    $0x6007c8,%ebx
  400467:	48 8b 05 52 05 20 00 	mov    0x200552(%rip),%rax        # 6009c0 <dtor_idx.6343>
  40046e:	48 81 eb c0 07 60 00 	sub    $0x6007c0,%rbx
  400475:	48 c1 fb 03          	sar    $0x3,%rbx
  400479:	48 83 eb 01          	sub    $0x1,%rbx
  40047d:	48 39 d8             	cmp    %rbx,%rax
  400480:	73 24                	jae    4004a6 <__do_global_dtors_aux+0x56>
  400482:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400488:	48 83 c0 01          	add    $0x1,%rax
  40048c:	48 89 05 2d 05 20 00 	mov    %rax,0x20052d(%rip)        # 6009c0 <dtor_idx.6343>
  400493:	ff 14 c5 c0 07 60 00 	callq  *0x6007c0(,%rax,8)
  40049a:	48 8b 05 1f 05 20 00 	mov    0x20051f(%rip),%rax        # 6009c0 <dtor_idx.6343>
  4004a1:	48 39 d8             	cmp    %rbx,%rax
  4004a4:	72 e2                	jb     400488 <__do_global_dtors_aux+0x38>
  4004a6:	c6 05 0b 05 20 00 01 	movb   $0x1,0x20050b(%rip)        # 6009b8 <__bss_start>
  4004ad:	48 83 c4 08          	add    $0x8,%rsp
  4004b1:	5b                   	pop    %rbx
  4004b2:	c9                   	leaveq 
  4004b3:	c3                   	retq   
  4004b4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4004bb:	00 00 00 00 00 

00000000004004c0 <frame_dummy>:
  4004c0:	55                   	push   %rbp
  4004c1:	48 83 3d 07 03 20 00 	cmpq   $0x0,0x200307(%rip)        # 6007d0 <__JCR_END__>
  4004c8:	00 
  4004c9:	48 89 e5             	mov    %rsp,%rbp
  4004cc:	74 12                	je     4004e0 <frame_dummy+0x20>
  4004ce:	b8 00 00 00 00       	mov    $0x0,%eax
  4004d3:	48 85 c0             	test   %rax,%rax
  4004d6:	74 08                	je     4004e0 <frame_dummy+0x20>
  4004d8:	bf d0 07 60 00       	mov    $0x6007d0,%edi
  4004dd:	c9                   	leaveq 
  4004de:	ff e0                	jmpq   *%rax
  4004e0:	c9                   	leaveq 
  4004e1:	c3                   	retq   
  4004e2:	90                   	nop
  4004e3:	90                   	nop

00000000004004e4 <main>:
  4004e4:	55                   	push   %rbp
  4004e5:	48 89 e5             	mov    %rsp,%rbp
  4004e8:	53                   	push   %rbx
  4004e9:	48 83 ec 28          	sub    $0x28,%rsp
  4004ed:	89 7d dc             	mov    %edi,-0x24(%rbp)
  4004f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4004f4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  4004fb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  400502:	8b 05 fe 01 00 00    	mov    0x1fe(%rip),%eax        # 400706 <_IO_stdin_used+0x6e>
  400508:	89 45 e0             	mov    %eax,-0x20(%rbp)
  40050b:	b8 9c 06 40 00       	mov    $0x40069c,%eax
  400510:	48 89 c7             	mov    %rax,%rdi
  400513:	b8 00 00 00 00       	mov    $0x0,%eax
  400518:	e8 c3 fe ff ff       	callq  4003e0 <printf@plt>
  40051d:	b8 ae 06 40 00       	mov    $0x4006ae,%eax
  400522:	8b 55 e8             	mov    -0x18(%rbp),%edx
  400525:	89 d6                	mov    %edx,%esi
  400527:	48 89 c7             	mov    %rax,%rdi
  40052a:	b8 00 00 00 00       	mov    $0x0,%eax
  40052f:	e8 ac fe ff ff       	callq  4003e0 <printf@plt>
  400534:	b8 bb 06 40 00       	mov    $0x4006bb,%eax
  400539:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  40053d:	48 89 d6             	mov    %rdx,%rsi
  400540:	48 89 c7             	mov    %rax,%rdi
  400543:	b8 00 00 00 00       	mov    $0x0,%eax
  400548:	e8 93 fe ff ff       	callq  4003e0 <printf@plt>
  40054d:	b8 cc 06 40 00       	mov    $0x4006cc,%eax
  400552:	8b 55 ec             	mov    -0x14(%rbp),%edx
  400555:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  400559:	48 89 ce             	mov    %rcx,%rsi
  40055c:	48 89 c7             	mov    %rax,%rdi
  40055f:	b8 00 00 00 00       	mov    $0x0,%eax
  400564:	e8 77 fe ff ff       	callq  4003e0 <printf@plt>
  400569:	b8 df 06 40 00       	mov    $0x4006df,%eax
  40056e:	8b 55 ec             	mov    -0x14(%rbp),%edx
  400571:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  400574:	89 ce                	mov    %ecx,%esi
  400576:	48 89 c7             	mov    %rax,%rdi
  400579:	b8 00 00 00 00       	mov    $0x0,%eax
  40057e:	e8 5d fe ff ff       	callq  4003e0 <printf@plt>
  400583:	b8 f2 06 40 00       	mov    $0x4006f2,%eax
  400588:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40058c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40058f:	8b 5d e8             	mov    -0x18(%rbp),%ebx
  400592:	89 de                	mov    %ebx,%esi
  400594:	48 89 c7             	mov    %rax,%rdi
  400597:	b8 00 00 00 00       	mov    $0x0,%eax
  40059c:	e8 3f fe ff ff       	callq  4003e0 <printf@plt>
  4005a1:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a6:	48 83 c4 28          	add    $0x28,%rsp
  4005aa:	5b                   	pop    %rbx
  4005ab:	c9                   	leaveq 
  4005ac:	c3                   	retq   
  4005ad:	90                   	nop
  4005ae:	90                   	nop
  4005af:	90                   	nop

00000000004005b0 <__libc_csu_fini>:
  4005b0:	f3 c3                	repz retq 
  4005b2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4005b9:	1f 84 00 00 00 00 00 

00000000004005c0 <__libc_csu_init>:
  4005c0:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  4005c5:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  4005ca:	48 8d 2d db 01 20 00 	lea    0x2001db(%rip),%rbp        # 6007ac <__init_array_end>
  4005d1:	4c 8d 25 d4 01 20 00 	lea    0x2001d4(%rip),%r12        # 6007ac <__init_array_end>
  4005d8:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  4005dd:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4005e2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4005e7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4005ec:	48 83 ec 38          	sub    $0x38,%rsp
  4005f0:	4c 29 e5             	sub    %r12,%rbp
  4005f3:	41 89 fd             	mov    %edi,%r13d
  4005f6:	49 89 f6             	mov    %rsi,%r14
  4005f9:	48 c1 fd 03          	sar    $0x3,%rbp
  4005fd:	49 89 d7             	mov    %rdx,%r15
  400600:	e8 b3 fd ff ff       	callq  4003b8 <_init>
  400605:	48 85 ed             	test   %rbp,%rbp
  400608:	74 1c                	je     400626 <__libc_csu_init+0x66>
  40060a:	31 db                	xor    %ebx,%ebx
  40060c:	0f 1f 40 00          	nopl   0x0(%rax)
  400610:	4c 89 fa             	mov    %r15,%rdx
  400613:	4c 89 f6             	mov    %r14,%rsi
  400616:	44 89 ef             	mov    %r13d,%edi
  400619:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40061d:	48 83 c3 01          	add    $0x1,%rbx
  400621:	48 39 eb             	cmp    %rbp,%rbx
  400624:	72 ea                	jb     400610 <__libc_csu_init+0x50>
  400626:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40062b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400630:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400635:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40063a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40063f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400644:	48 83 c4 38          	add    $0x38,%rsp
  400648:	c3                   	retq   
  400649:	90                   	nop
  40064a:	90                   	nop
  40064b:	90                   	nop
  40064c:	90                   	nop
  40064d:	90                   	nop
  40064e:	90                   	nop
  40064f:	90                   	nop

0000000000400650 <__do_global_ctors_aux>:
  400650:	55                   	push   %rbp
  400651:	48 89 e5             	mov    %rsp,%rbp
  400654:	53                   	push   %rbx
  400655:	48 83 ec 08          	sub    $0x8,%rsp
  400659:	48 8b 05 50 01 20 00 	mov    0x200150(%rip),%rax        # 6007b0 <__CTOR_LIST__>
  400660:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400664:	74 19                	je     40067f <__do_global_ctors_aux+0x2f>
  400666:	bb b0 07 60 00       	mov    $0x6007b0,%ebx
  40066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400670:	48 83 eb 08          	sub    $0x8,%rbx
  400674:	ff d0                	callq  *%rax
  400676:	48 8b 03             	mov    (%rbx),%rax
  400679:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40067d:	75 f1                	jne    400670 <__do_global_ctors_aux+0x20>
  40067f:	48 83 c4 08          	add    $0x8,%rsp
  400683:	5b                   	pop    %rbx
  400684:	c9                   	leaveq 
  400685:	c3                   	retq   
  400686:	90                   	nop
  400687:	90                   	nop

Disassembly of section .fini:

0000000000400688 <_fini>:
  400688:	48 83 ec 08          	sub    $0x8,%rsp
  40068c:	e8 bf fd ff ff       	callq  400450 <__do_global_dtors_aux>
  400691:	48 83 c4 08          	add    $0x8,%rsp
  400695:	c3                   	retq   
