
a.out:     file format elf32-i386


Disassembly of section .init:

080482f8 <_init>:
 80482f8:	53                   	push   %ebx
 80482f9:	83 ec 08             	sub    $0x8,%esp
 80482fc:	e8 00 00 00 00       	call   8048301 <_init+0x9>
 8048301:	5b                   	pop    %ebx
 8048302:	81 c3 f3 1c 00 00    	add    $0x1cf3,%ebx
 8048308:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804830e:	85 c0                	test   %eax,%eax
 8048310:	74 05                	je     8048317 <_init+0x1f>
 8048312:	e8 49 00 00 00       	call   8048360 <__gmon_start__@plt>
 8048317:	e8 f4 00 00 00       	call   8048410 <frame_dummy>
 804831c:	e8 3f 02 00 00       	call   8048560 <__do_global_ctors_aux>
 8048321:	83 c4 08             	add    $0x8,%esp
 8048324:	5b                   	pop    %ebx
 8048325:	c3                   	ret    

Disassembly of section .plt:

08048330 <printf@plt-0x10>:
 8048330:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048336:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804833c:	00 00                	add    %al,(%eax)
	...

08048340 <printf@plt>:
 8048340:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048346:	68 00 00 00 00       	push   $0x0
 804834b:	e9 e0 ff ff ff       	jmp    8048330 <_init+0x38>

08048350 <__stack_chk_fail@plt>:
 8048350:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048356:	68 08 00 00 00       	push   $0x8
 804835b:	e9 d0 ff ff ff       	jmp    8048330 <_init+0x38>

08048360 <__gmon_start__@plt>:
 8048360:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048366:	68 10 00 00 00       	push   $0x10
 804836b:	e9 c0 ff ff ff       	jmp    8048330 <_init+0x38>

08048370 <__libc_start_main@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 18 00 00 00       	push   $0x18
 804837b:	e9 b0 ff ff ff       	jmp    8048330 <_init+0x38>

Disassembly of section .text:

08048380 <_start>:
 8048380:	31 ed                	xor    %ebp,%ebp
 8048382:	5e                   	pop    %esi
 8048383:	89 e1                	mov    %esp,%ecx
 8048385:	83 e4 f0             	and    $0xfffffff0,%esp
 8048388:	50                   	push   %eax
 8048389:	54                   	push   %esp
 804838a:	52                   	push   %edx
 804838b:	68 50 85 04 08       	push   $0x8048550
 8048390:	68 e0 84 04 08       	push   $0x80484e0
 8048395:	51                   	push   %ecx
 8048396:	56                   	push   %esi
 8048397:	68 34 84 04 08       	push   $0x8048434
 804839c:	e8 cf ff ff ff       	call   8048370 <__libc_start_main@plt>
 80483a1:	f4                   	hlt    
 80483a2:	90                   	nop
 80483a3:	90                   	nop
 80483a4:	90                   	nop
 80483a5:	90                   	nop
 80483a6:	90                   	nop
 80483a7:	90                   	nop
 80483a8:	90                   	nop
 80483a9:	90                   	nop
 80483aa:	90                   	nop
 80483ab:	90                   	nop
 80483ac:	90                   	nop
 80483ad:	90                   	nop
 80483ae:	90                   	nop
 80483af:	90                   	nop

080483b0 <__do_global_dtors_aux>:
 80483b0:	55                   	push   %ebp
 80483b1:	89 e5                	mov    %esp,%ebp
 80483b3:	53                   	push   %ebx
 80483b4:	83 ec 04             	sub    $0x4,%esp
 80483b7:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 80483be:	75 3f                	jne    80483ff <__do_global_dtors_aux+0x4f>
 80483c0:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483c5:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 80483ca:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 80483d0:	c1 fb 02             	sar    $0x2,%ebx
 80483d3:	83 eb 01             	sub    $0x1,%ebx
 80483d6:	39 d8                	cmp    %ebx,%eax
 80483d8:	73 1e                	jae    80483f8 <__do_global_dtors_aux+0x48>
 80483da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483e0:	83 c0 01             	add    $0x1,%eax
 80483e3:	a3 1c a0 04 08       	mov    %eax,0x804a01c
 80483e8:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 80483ef:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483f4:	39 d8                	cmp    %ebx,%eax
 80483f6:	72 e8                	jb     80483e0 <__do_global_dtors_aux+0x30>
 80483f8:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 80483ff:	83 c4 04             	add    $0x4,%esp
 8048402:	5b                   	pop    %ebx
 8048403:	5d                   	pop    %ebp
 8048404:	c3                   	ret    
 8048405:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048410 <frame_dummy>:
 8048410:	55                   	push   %ebp
 8048411:	89 e5                	mov    %esp,%ebp
 8048413:	83 ec 18             	sub    $0x18,%esp
 8048416:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804841b:	85 c0                	test   %eax,%eax
 804841d:	74 12                	je     8048431 <frame_dummy+0x21>
 804841f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048424:	85 c0                	test   %eax,%eax
 8048426:	74 09                	je     8048431 <frame_dummy+0x21>
 8048428:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804842f:	ff d0                	call   *%eax
 8048431:	c9                   	leave  
 8048432:	c3                   	ret    
 8048433:	90                   	nop

08048434 <main>:
 #include <stdio.h>

int main(int argc, char * argv[]){
 8048434:	55                   	push   %ebp
 8048435:	89 e5                	mov    %esp,%ebp
 8048437:	57                   	push   %edi
 8048438:	53                   	push   %ebx
 8048439:	83 e4 f0             	and    $0xfffffff0,%esp
 804843c:	81 ec 20 04 00 00    	sub    $0x420,%esp
 8048442:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048445:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8048449:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804844f:	89 84 24 1c 04 00 00 	mov    %eax,0x41c(%esp)
 8048456:	31 c0                	xor    %eax,%eax
   
  int a=10;
 8048458:	c7 44 24 28 0a 00 00 	movl   $0xa,0x28(%esp)
 804845f:	00 
  int  b=20;
 8048460:	c7 44 24 2c 14 00 00 	movl   $0x14,0x2c(%esp)
 8048467:	00 
  char c[1000]="aaaaaaaaa";
 8048468:	c7 44 24 34 61 61 61 	movl   $0x61616161,0x34(%esp)
 804846f:	61 
 8048470:	c7 44 24 38 61 61 61 	movl   $0x61616161,0x38(%esp)
 8048477:	61 
 8048478:	c7 44 24 3c 61 00 00 	movl   $0x61,0x3c(%esp)
 804847f:	00 
 8048480:	8d 5c 24 40          	lea    0x40(%esp),%ebx
 8048484:	b8 00 00 00 00       	mov    $0x0,%eax
 8048489:	ba f7 00 00 00       	mov    $0xf7,%edx
 804848e:	89 df                	mov    %ebx,%edi
 8048490:	89 d1                	mov    %edx,%ecx
 8048492:	f3 ab                	rep stos %eax,%es:(%edi)
  char d='d';
 8048494:	c6 44 24 33 64       	movb   $0x64,0x33(%esp)
  
  printf(a,b,c,d);
 8048499:	0f be 54 24 33       	movsbl 0x33(%esp),%edx
 804849e:	8b 44 24 28          	mov    0x28(%esp),%eax
 80484a2:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80484a6:	8d 54 24 34          	lea    0x34(%esp),%edx
 80484aa:	89 54 24 08          	mov    %edx,0x8(%esp)
 80484ae:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 80484b2:	89 54 24 04          	mov    %edx,0x4(%esp)
 80484b6:	89 04 24             	mov    %eax,(%esp)
 80484b9:	e8 82 fe ff ff       	call   8048340 <printf@plt>

  return 0;
 80484be:	b8 00 00 00 00       	mov    $0x0,%eax
}
 80484c3:	8b 94 24 1c 04 00 00 	mov    0x41c(%esp),%edx
 80484ca:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80484d1:	74 05                	je     80484d8 <main+0xa4>
 80484d3:	e8 78 fe ff ff       	call   8048350 <__stack_chk_fail@plt>
 80484d8:	8d 65 f8             	lea    -0x8(%ebp),%esp
 80484db:	5b                   	pop    %ebx
 80484dc:	5f                   	pop    %edi
 80484dd:	5d                   	pop    %ebp
 80484de:	c3                   	ret    
 80484df:	90                   	nop

080484e0 <__libc_csu_init>:
 80484e0:	55                   	push   %ebp
 80484e1:	57                   	push   %edi
 80484e2:	56                   	push   %esi
 80484e3:	53                   	push   %ebx
 80484e4:	e8 69 00 00 00       	call   8048552 <__i686.get_pc_thunk.bx>
 80484e9:	81 c3 0b 1b 00 00    	add    $0x1b0b,%ebx
 80484ef:	83 ec 1c             	sub    $0x1c,%esp
 80484f2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80484f6:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80484fc:	e8 f7 fd ff ff       	call   80482f8 <_init>
 8048501:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048507:	29 c7                	sub    %eax,%edi
 8048509:	c1 ff 02             	sar    $0x2,%edi
 804850c:	85 ff                	test   %edi,%edi
 804850e:	74 29                	je     8048539 <__libc_csu_init+0x59>
 8048510:	31 f6                	xor    %esi,%esi
 8048512:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048518:	8b 44 24 38          	mov    0x38(%esp),%eax
 804851c:	89 2c 24             	mov    %ebp,(%esp)
 804851f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048523:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048527:	89 44 24 04          	mov    %eax,0x4(%esp)
 804852b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048532:	83 c6 01             	add    $0x1,%esi
 8048535:	39 fe                	cmp    %edi,%esi
 8048537:	75 df                	jne    8048518 <__libc_csu_init+0x38>
 8048539:	83 c4 1c             	add    $0x1c,%esp
 804853c:	5b                   	pop    %ebx
 804853d:	5e                   	pop    %esi
 804853e:	5f                   	pop    %edi
 804853f:	5d                   	pop    %ebp
 8048540:	c3                   	ret    
 8048541:	eb 0d                	jmp    8048550 <__libc_csu_fini>
 8048543:	90                   	nop
 8048544:	90                   	nop
 8048545:	90                   	nop
 8048546:	90                   	nop
 8048547:	90                   	nop
 8048548:	90                   	nop
 8048549:	90                   	nop
 804854a:	90                   	nop
 804854b:	90                   	nop
 804854c:	90                   	nop
 804854d:	90                   	nop
 804854e:	90                   	nop
 804854f:	90                   	nop

08048550 <__libc_csu_fini>:
 8048550:	f3 c3                	repz ret 

08048552 <__i686.get_pc_thunk.bx>:
 8048552:	8b 1c 24             	mov    (%esp),%ebx
 8048555:	c3                   	ret    
 8048556:	90                   	nop
 8048557:	90                   	nop
 8048558:	90                   	nop
 8048559:	90                   	nop
 804855a:	90                   	nop
 804855b:	90                   	nop
 804855c:	90                   	nop
 804855d:	90                   	nop
 804855e:	90                   	nop
 804855f:	90                   	nop

08048560 <__do_global_ctors_aux>:
 8048560:	55                   	push   %ebp
 8048561:	89 e5                	mov    %esp,%ebp
 8048563:	53                   	push   %ebx
 8048564:	83 ec 04             	sub    $0x4,%esp
 8048567:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804856c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804856f:	74 13                	je     8048584 <__do_global_ctors_aux+0x24>
 8048571:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048576:	66 90                	xchg   %ax,%ax
 8048578:	83 eb 04             	sub    $0x4,%ebx
 804857b:	ff d0                	call   *%eax
 804857d:	8b 03                	mov    (%ebx),%eax
 804857f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048582:	75 f4                	jne    8048578 <__do_global_ctors_aux+0x18>
 8048584:	83 c4 04             	add    $0x4,%esp
 8048587:	5b                   	pop    %ebx
 8048588:	5d                   	pop    %ebp
 8048589:	c3                   	ret    
 804858a:	90                   	nop
 804858b:	90                   	nop

Disassembly of section .fini:

0804858c <_fini>:
 804858c:	53                   	push   %ebx
 804858d:	83 ec 08             	sub    $0x8,%esp
 8048590:	e8 00 00 00 00       	call   8048595 <_fini+0x9>
 8048595:	5b                   	pop    %ebx
 8048596:	81 c3 5f 1a 00 00    	add    $0x1a5f,%ebx
 804859c:	e8 0f fe ff ff       	call   80483b0 <__do_global_dtors_aux>
 80485a1:	83 c4 08             	add    $0x8,%esp
 80485a4:	5b                   	pop    %ebx
 80485a5:	c3                   	ret    
